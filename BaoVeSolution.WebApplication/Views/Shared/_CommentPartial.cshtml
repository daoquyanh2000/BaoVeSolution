@model List<BaoVeSolution.WebApplication.DB.Entities.Comment>

<div class="bg-light rounded my-3 p-2">
    <h3 class="mb-4 section-title">Thêm bình luận</h3>
    <form>
        <div class="form-row">
            <div class="form-group col-sm-6">
                <label for="name"><strong>Họ tên <span style="color:red">*</span></strong></label>
                <input type="text" class="form-control" id="name" required>
            </div>
            <div class="form-group col-sm-6">
                <label for="name"><strong>Email <span style="color:red">*</span></strong></label>
                <input type="email" class="form-control" id="email" required>
            </div>
        </div>
        <div class="form-group">
            <label for="name"><strong>Nội dung <span style="color:red">*</span></strong></label>
            <textarea id="message" cols="30" rows="3" class="form-control" required></textarea>
        </div>
        <div class="form-group mb-0">
            <input type="submit" value="Gửi" class="btn btn-primary addNewCommentBtn font-weight-bolder" data-comment-id="0">
        </div>
    </form>
</div>

@if (Model != null)
{
    <h3 class="mb-4 section-title">@Model.Count Bình luận</h3>
    @RenderComment(Model.Where(x => x.ParentId == 0).ToList())
}

<script>
    AddEventListener();
    $(document).on("click", ".reply-link", function (e) {
        e.preventDefault();
        $(".reply-partial").remove();
        let commentId = $(this).data("comment-id");
        GetReplyPartial(commentId).then(res => {
            $(this).after(res);
            AddEventListener(commentId);
        })
    });

/*    thêm comment mới*/
    function addNewComment(data) {
        return $.ajax({
            type: "POST",
            url: '@Url.Action("AddNewComment", "Comments")',
            data: data,
            dataType: 'json',
            contentType: 'application/json;charset=utf-8'
        });
    }
/*    thêm trả lời comment*/
    function GetReplyPartial(commentId) {
        return $.ajax({
            type: "GET",
            url: '@Url.Action("ReplyPartial", "Comments")',
            data: {
                commentId: commentId
            },
         });
    }
/*    thêm sự kiện nút comment*/
    function AddEventListener(commentId = 0) {
        $(".addNewCommentBtn").click(function (e) {
        e.preventDefault();
            let data = {};
            if (commentId == 0) {
                data = JSON.stringify({
                    Content: $("#message").val() || "",
                    Name: $("#name").val() || "",
                    Email: $("#email").val() || "",
                    BlogId: @ViewBag.blogId,
                    parentId: $(this).data("comment-id"),
                });
            } else {
                data = JSON.stringify({
                    Content: $(`#message-${commentId}`).val(),
                    Name: $(`#name-${commentId}`).val(),
                    Email: $(`#email-${commentId}`).val(),
                    BlogId: @ViewBag.blogId,
                    parentId: $(this).data("comment-id"),
                });
            }
        addNewComment(data)
            .then(res => {
                $.toast({
                    heading: res.heading,
                    icon: res.icon,
                    text: res.message,
                    position: 'top-right',
                    stack: 10,
                    hideAfter: 5000,
                    showHideTransition: 'slide',
                })
                if (res.status == true) {
                    setTimeout(function () {
                        location.reload();
                    }, 2000);
                }
            });
        });
    }
</script>

@helper RenderComment(List<BaoVeSolution.WebApplication.DB.Entities.Comment> comments, bool isRoot = true)
{
    var myClass = "mb-4";
    if (isRoot == false)
    {
        myClass = "mt-4";
    }
    foreach (var comment in comments)
    {
        <div class="media @myClass">
            <img src="https://ssl.gstatic.com/accounts/ui/avatar_2x.png"  alt="Image" class="img-fluid rounded-circle mr-3 mt-1" style="width: 45px;">
            <div class="media-body">
@*                <div class="float-right">
                    Xóa
                </div>*@

                <h6>
                    <strong>@comment.Name</strong>
                    <small><i>@comment.DateCreated.Value.ToString("dd-MM-yyyy") vào @comment.DateCreated.Value.ToString("HH:mm")</i></small>
                </h6>
                <p>@comment.Content</p>
                <button class="btn btn-sm btn-light reply-link" data-comment-id="@comment.Id">Trả lời</button>
                @{
                    var children = Model.Where(x => x.ParentId == comment.Id).ToList();
                    if (children.Count() > 0)
                    {
                        @RenderComment(children, false);
                    }
                }
            </div>
        </div>
    }
}